{% if summary %}
<table class="table table-striped table-bordered table-smaller-rows">
    <thead>
        <tr>
            <th>Which</th>
            <th>Value</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Current Age 👨‍💻</td>
            <td>{{ summary.age | round(1) }} years</td>
        </tr>
        <tr>
            <td>Retirement Age 📅</td>
            <td>{{ summary.fire_age | round(1) }} years</td>
        </tr>
        <tr>
            <td>Fire date 📅</td>
            <td>{{ summary.fire_date }}</td>
        </tr>
        <tr>
            <td>Years to FI 🔥🔥🔥🔥</td>
            <td>{{ summary.years_till_fi | round(1) }} years</td>
        </tr>
        <tr>
            <td>NW at FI 🔥</td>
            <td>${{ (summary.nw_at_fi / 1e6) | round(2) }}M</td>
        </tr>
        <tr>
            <td>Total saved 💰</td>
            <td>${{ (summary.total_saved / 1e6) | round(2) }}M</td>
        </tr>
        <tr>
            <td>Total Investment Profits 💰</td>
            <td>${{ (summary.total_investment_profits / 1e6) | round(2) }}M</td>
        </tr>
        <tr>
            <td>Montly Safe Withdraw at FI 🤑</td>
            <td>${{ (summary.safe_withdraw_at_fi / 1000) | int }}k</td>
        </tr>
        <tr>
            <td>Monthly Spending at FI 💰</td>
            <td>${{ (summary.spending_at_fi / 1000) | int }}k</td>
        </tr>
        {% for age in [35, 40, 45, 50, 55] %}
        {% if age in summary.safe_withdraw_at_age %}
        <tr>
            <td>Monthly Safe Withdraw at {{ age }} 👀️💰</td>
            <td>{{ format_currency(summary.safe_withdraw_at_age[age]) }}</td>
        </tr>
        {% endif %}
        {% endfor %}
        <tr>
            <td>Impact of Extra Spending 💸</td>
            <td>
                {% if extra_spending > 0 %}
                    {% if time_difference %}
                        {% set total_days = (time_difference * 365.25) | round | int %}
                        {% if total_days >= 365 %}
                            {% set years = (total_days / 365.25) | round(2) %}
                            Spending ${{ extra_spending }} now will delay your FIRE date by approximately {{ years }} year{% if years != 1 %}s{% endif %}.
                        {% elif total_days >= 30 %}
                            {% set months = (total_days / 30.44) | round(2) %}
                            Spending ${{ extra_spending }} now will delay your FIRE date by approximately {{ months }} month{% if months != 1 %}s{% endif %}.
                        {% else %}
                            Spending ${{ extra_spending }} now will delay your FIRE date by approximately {{ total_days }} day{% if total_days != 1 %}s{% endif %}.
                        {% endif %}
                        {% if summary_with_extra %}
                        <br>
                        Original FIRE date: {{ summary.fire_date }}
                        <br>
                        New FIRE date with extra spending: {{ summary_with_extra.fire_date }}
                        {% endif %}
                    {% else %}
                        Extra spending of ${{ extra_spending }} entered, but it doesn't affect your FIRE date.
                    {% endif %}
                {% else %}
                    No extra spending entered.
                {% endif %}
            </td>
        </tr>
    </tbody>
</table>
{% elif results %}
<div class="alert alert-danger" role="alert">
    <h4 class="alert-heading">Neverending Work Train Alert! 🚂</h4>
    <p>Uh-oh! It looks like you're on the Neverending Work Train! Keep chugging along, or better yet, reevaluate your financial plan to hop on the Express Train to Retirement! 🌴🍹</p>
</div>
{% endif %}

{% if results %}
<!-- Create div elements to hold the plots -->
<div id="age-vs-net-worth-plot"></div>
<div id="age-vs-monthly-safe-withdraw-plot"></div>
<div id="savings-vs-spending-plot"></div>

<!-- Add the JavaScript code to render the plots -->
<script>
    vegaEmbed("#age-vs-net-worth-plot", JSON.parse({{ age_vs_net_worth_plot| tojson | safe }}));
    vegaEmbed("#age-vs-monthly-safe-withdraw-plot", JSON.parse({{ age_vs_monthly_safe_withdraw_plot| tojson | safe }}));
    vegaEmbed("#savings-vs-spending-plot", JSON.parse({{ savings_vs_spending_plot| tojson | safe }}));
</script>

<div class="scrollable-table">
    <table class="table table-striped table-bordered table-smaller-rows">
        <thead>
            <tr>
                <th># months</th>
                <th># years</th>
                <th>Age</th>
                <th>NW</th>
                <th>ΔNW</th>
                <th>Saving</th>
                <th>Income</th>
                <th>Investment profits</th>
                <th>Total saved</th>
                <th>Total Investment profits</th>
                <th>Spending</th>
                <th>Safe withdraw</th>
                <th>Safe - spending</th>
            </tr>
        </thead>
        <tbody>
            {% for result in results %}
            <tr>
                <td>{{ result.months }} months</td>
                <td>{{ result.years | round(1) }} years</td>
                <td>{{ result.age | round(1) }} years</td>
                <td>{{ format_currency(result.nw) }}</td>
                <td>{{ format_currency(result.delta_nw) }}</td>
                <td>{{ format_currency(result.saving) }}</td>
                <td>{{ format_currency(result.income) }}</td>
                <td>{{ format_currency(result.investment_profits) }}</td>
                <td>{{ format_currency(result.total_saved) }}</td>
                <td>{{ format_currency(result.total_investment_profits) }}</td>
                <td>{{ format_currency(result.spending) }}</td>
                <td>{{ format_currency(result.safe_withdraw_rule_monthly) }}</td>
                <td style="background-color: {{ interpolate_color(result.safe_withdraw_minus_spending) }}">{{ format_currency(result.safe_withdraw_minus_spending) }}</td>
            </tr>
            {% endfor %}
        </tbody>
    </table>
</div>
{% endif %}
